
bin/div_plain:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <_init>:
  401000:	f3 0f 1e fa          	endbr64 
  401004:	48 83 ec 08          	sub    $0x8,%rsp
  401008:	48 8b 05 e9 2f 00 00 	mov    0x2fe9(%rip),%rax        # 403ff8 <__gmon_start__@Base>
  40100f:	48 85 c0             	test   %rax,%rax
  401012:	74 02                	je     401016 <_init+0x16>
  401014:	ff d0                	call   *%rax
  401016:	48 83 c4 08          	add    $0x8,%rsp
  40101a:	c3                   	ret    

Disassembly of section .plt:

0000000000401020 <printf@plt-0x10>:
  401020:	ff 35 e2 2f 00 00    	push   0x2fe2(%rip)        # 404008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401026:	ff 25 e4 2f 00 00    	jmp    *0x2fe4(%rip)        # 404010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401030 <printf@plt>:
  401030:	ff 25 e2 2f 00 00    	jmp    *0x2fe2(%rip)        # 404018 <printf@GLIBC_2.2.5>
  401036:	68 00 00 00 00       	push   $0x0
  40103b:	e9 e0 ff ff ff       	jmp    401020 <_init+0x20>

Disassembly of section .text:

0000000000401040 <main>:
gcc -O3 -Wall -Wextra -o div_plain div_plain.c
*/

#include <stdio.h>

int main(void) {
  401040:	48 b8 00 40 59 73 07 	movabs $0x773594000,%rax
  401047:	00 00 00 
  40104a:	48 83 ec 08          	sub    $0x8,%rsp
  const unsigned long long int N = (unsigned long long int) 4.0e9;
  unsigned long long int i;
  double div = 1.0000000001;
  double a = 1.49182474713380642;
  40104e:	c5 fb 10 05 c2 0f 00 	vmovsd 0xfc2(%rip),%xmm0        # 402018 <__dso_handle+0x10>
  401055:	00 
  401056:	c5 fb 10 0d c2 0f 00 	vmovsd 0xfc2(%rip),%xmm1        # 402020 <__dso_handle+0x18>
  40105d:	00 
  40105e:	66 90                	xchg   %ax,%ax

  for(i=0; i<8*N; ++i) {
    a = a / div;
  401060:	c5 fb 5e c1          	vdivsd %xmm1,%xmm0,%xmm0
  for(i=0; i<8*N; ++i) {
  401064:	48 83 e8 01          	sub    $0x1,%rax
  401068:	75 f6                	jne    401060 <main+0x20>
  }

  printf("%.17f\n", a);
  40106a:	bf 10 20 40 00       	mov    $0x402010,%edi
  40106f:	b8 01 00 00 00       	mov    $0x1,%eax
  401074:	e8 b7 ff ff ff       	call   401030 <printf@plt>

  return 0;
}
  401079:	31 c0                	xor    %eax,%eax
  40107b:	48 83 c4 08          	add    $0x8,%rsp
  40107f:	c3                   	ret    

0000000000401080 <_start>:
  401080:	f3 0f 1e fa          	endbr64 
  401084:	31 ed                	xor    %ebp,%ebp
  401086:	49 89 d1             	mov    %rdx,%r9
  401089:	5e                   	pop    %rsi
  40108a:	48 89 e2             	mov    %rsp,%rdx
  40108d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  401091:	50                   	push   %rax
  401092:	54                   	push   %rsp
  401093:	45 31 c0             	xor    %r8d,%r8d
  401096:	31 c9                	xor    %ecx,%ecx
  401098:	48 c7 c7 40 10 40 00 	mov    $0x401040,%rdi
  40109f:	ff 15 4b 2f 00 00    	call   *0x2f4b(%rip)        # 403ff0 <__libc_start_main@GLIBC_2.34>
  4010a5:	f4                   	hlt    

00000000004010a6 <.annobin_abi_note.c>:
  4010a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  4010ad:	00 00 00 

00000000004010b0 <_dl_relocate_static_pie>:
  4010b0:	f3 0f 1e fa          	endbr64 
  4010b4:	c3                   	ret    

00000000004010b5 <.annobin__dl_relocate_static_pie.end>:
  4010b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  4010bc:	00 00 00 
  4010bf:	90                   	nop

00000000004010c0 <deregister_tm_clones>:
  4010c0:	b8 28 40 40 00       	mov    $0x404028,%eax
  4010c5:	48 3d 28 40 40 00    	cmp    $0x404028,%rax
  4010cb:	74 13                	je     4010e0 <deregister_tm_clones+0x20>
  4010cd:	b8 00 00 00 00       	mov    $0x0,%eax
  4010d2:	48 85 c0             	test   %rax,%rax
  4010d5:	74 09                	je     4010e0 <deregister_tm_clones+0x20>
  4010d7:	bf 28 40 40 00       	mov    $0x404028,%edi
  4010dc:	ff e0                	jmp    *%rax
  4010de:	66 90                	xchg   %ax,%ax
  4010e0:	c3                   	ret    
  4010e1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  4010e8:	00 00 00 00 
  4010ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004010f0 <register_tm_clones>:
  4010f0:	be 28 40 40 00       	mov    $0x404028,%esi
  4010f5:	48 81 ee 28 40 40 00 	sub    $0x404028,%rsi
  4010fc:	48 89 f0             	mov    %rsi,%rax
  4010ff:	48 c1 ee 3f          	shr    $0x3f,%rsi
  401103:	48 c1 f8 03          	sar    $0x3,%rax
  401107:	48 01 c6             	add    %rax,%rsi
  40110a:	48 d1 fe             	sar    %rsi
  40110d:	74 11                	je     401120 <register_tm_clones+0x30>
  40110f:	b8 00 00 00 00       	mov    $0x0,%eax
  401114:	48 85 c0             	test   %rax,%rax
  401117:	74 07                	je     401120 <register_tm_clones+0x30>
  401119:	bf 28 40 40 00       	mov    $0x404028,%edi
  40111e:	ff e0                	jmp    *%rax
  401120:	c3                   	ret    
  401121:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  401128:	00 00 00 00 
  40112c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401130 <__do_global_dtors_aux>:
  401130:	f3 0f 1e fa          	endbr64 
  401134:	80 3d e9 2e 00 00 00 	cmpb   $0x0,0x2ee9(%rip)        # 404024 <completed.0>
  40113b:	75 13                	jne    401150 <__do_global_dtors_aux+0x20>
  40113d:	55                   	push   %rbp
  40113e:	48 89 e5             	mov    %rsp,%rbp
  401141:	e8 7a ff ff ff       	call   4010c0 <deregister_tm_clones>
  401146:	c6 05 d7 2e 00 00 01 	movb   $0x1,0x2ed7(%rip)        # 404024 <completed.0>
  40114d:	5d                   	pop    %rbp
  40114e:	c3                   	ret    
  40114f:	90                   	nop
  401150:	c3                   	ret    
  401151:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  401158:	00 00 00 00 
  40115c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401160 <frame_dummy>:
  401160:	f3 0f 1e fa          	endbr64 
  401164:	eb 8a                	jmp    4010f0 <register_tm_clones>

Disassembly of section .fini:

0000000000401168 <_fini>:
  401168:	f3 0f 1e fa          	endbr64 
  40116c:	48 83 ec 08          	sub    $0x8,%rsp
  401170:	48 83 c4 08          	add    $0x8,%rsp
  401174:	c3                   	ret    
